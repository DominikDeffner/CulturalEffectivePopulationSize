N <- 1000
theta <- 0.1
N_variants <- 1
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.1
N_variants <- 1
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.1
N_variants <- 10
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.1
N_variants <- 100
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.1
N_variants <- 100
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.1
N_variants <- 1000
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.01
N_variants <- 1000
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 0.01
N_variants <- 1000
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop)
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 10
N_variants <- 1000
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop)
1:N_variants
dexp(10)
install.packages("truncdist")
library(truncdist)
curve(dtrunc(0.001, 1, 1000), from = 0, to, 1000)
curve(dtrunc(x, 1, 1000), from = 0, to, 1000)
curve(dtrunc(x, 1, 1000), from = 0, to= 1000)
curve(dtrunc(x, 0.01, 1, 1000), from = 0, to= 1000)
?dtrunc
curve(dtrunc(x, spec = "exp", a=1, b=1000), from = 0, to= 1000)
curve(dtrunc(x, spec = "exp", a=1, b=100), from = 0, to= 1000)
X = -ln(1 - (1 - exp(-λ)) * runif(N)) / λ
X = -ln(1 - (1 - exp(-λ)) * runif(N)) / 5
X = -ln(1 - (1 - exp(-5)) * runif(N)) / 5
?lm
?ln
X = -log(1 - (1 - exp(-5)) * runif(N)) / 5
dens(x)
dens(X)
X
dens(X)
x <- -log(1 - (1 - exp(-5)) * runif(N)) / 5
str(x)
dens(x)
library(rethinking)
dens(x)
plot(x)
hist(x)
1:N_variants
1:N_variants
1:N_variants
length(1:N_variants)
N <- 1000
theta <- 10
N_variants <- 1000
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
N <- 1000
theta <- 10
N_variants <- 1000
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
lambda <- 1
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
N_variants <- 1000
lambda <- 0
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
lambda <- 0.001
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
lambda <- 10
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
1:N_variants
p
sample(1:N_variants, N, replace = TRUE, prob = p)
Pop <- sample(1:N_variants, N, replace = TRUE, prob = p)
hist(Pop)
p
lambda <- 10
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
hist(p)
sum(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
Pop <- sample(1:N_variants, N, replace = TRUE, prob = p)
hist(Pop)
1:N_variants
p
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
#p <- p/sum(p)
hist(p)
N_variants <- 1000
lambda <- 100
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
#p <- p/sum(p)
hist(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
sum(p)
hist(p)
hist(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
dens(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
dens(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
dens(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
p
1:N_variants
Pop <- sample(1:N_variants, N, replace = TRUE, prob = p)
hist(Pop)
hist(Pop, breaks = 1000)
N <- 1000
theta <- 10
N_variants <- 1000
lambda <- 100
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
dens(p)
hist(p)
hist(p, breaks = 1000)
Pop <- sample(1:N_variants, N, replace = TRUE, prob = p)
hist(Pop, breaks = 1000)
N <- 1000
theta <- 10
N_variants <- 100
lambda <- 100
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p, breaks = 1000)
N <- 1000
theta <- 10
N_variants <- 100
lambda <- 100
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
rexp(1000, 1)
N_variants <- 5
-log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p/sum(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p/sum(p)
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
lambda <- 5
p <- -log(1 - (1 - exp(-lambda)) * runif(N_variants)) / lambda
p <- p/sum(p)
hist(p)
N_variants
2:N_variants
N_variants <- 5
lambda <- 0.5
p <- c()
p[1] <- lambda
p[2:N_variants] <- (1-lambda)/(N_variants-1)
p
lambda <- 0.1
p <- c()
p[1] <- lambda
p[2:N_variants] <- (1-lambda)/(N_variants-1)
p
lambda <- 0.9
p <- c()
p[1] <- lambda
p[2:N_variants] <- (1-lambda)/(N_variants-1)
p
sample(1:N_variants, N, replace = TRUE, prob = p)
N_variants <- 5
lambda <- 1/N_variants
p <- c()
p[1] <- lambda
p[2:N_variants] <- (1-lambda)/(N_variants-1)
p
# Just trying to get some understanding of N_eff
N_e <- function(k_bar,V_k){
(N * k_bar - 1 ) / ( (V_k / k_bar) + k_bar  -1 )
}
# k_bar = 1
N_eff <- function(V_k){
(N * 1 - 1 ) / ( (V_k / 1) + 1  -1 )
}
library(rethinking)
N <- 1000
theta <- 10
N_variants <- 5
lambda <- 1/N_variants
p <- c()
p[1] <- lambda
p[2:N_variants] <- (1-lambda)/(N_variants-1)
N_sim <- 1000
Ne <- c()
for (sim in 1:N_sim) {
print(sim)
Pop <- sample(1:N_variants, N, replace = TRUE, prob = p)
#Frequency of each variant
Variants <- unique(Pop)
Freq_Variants <- sapply(Variants, function (x) length(which(Pop == x)))
#Probability individuals choose each variant
P <- Freq_Variants^theta / sum(Freq_Variants^theta)
P_Ind <- P/Freq_Variants
Copied <- sample(1:N, N, replace = TRUE, sapply(1:N, function (x) P_Ind[which(Variants == Pop[x])]))
Offspring_Record<- sapply(1:N, function (x) length(which(Copied == x)))
Ne[sim] <- N_eff(var(Offspring_Record))
}
par (mfrow = c(1,2))
dens(Ne, xlim = c(0,1200))
abline(v = N, lty = 2)
hist(Pop, breaks = 1000)
dens(Ne, xlim = c(0,1200))
library(rethinking)
Ne
dens(Ne)
?dens
dens(1:10)
